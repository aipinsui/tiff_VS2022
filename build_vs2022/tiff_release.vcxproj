<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{734AA9A9-0238-311B-A95A-F8189F51A980}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>tiff_release</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="E:\tiff_VS2022\build_vs2022\CMakeFiles\15f96ad03887743e3bbf8b8a27e4c006\tiff_release.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Releasing tiff 4.6.0 ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\CMake\bin\cmake.exe -DSOURCE_DIR:PATH=E:/tiff_VS2022 -DLIBTIFF_VERSION=4.6.0 -DLIBTIFF_BASIC_SOURCE_DIR=E:/tiff_VS2022 -DLIBTIFF_BASIC_BINARY_DIR=E:/tiff_VS2022/build_vs2022 -P E:/tiff_VS2022/cmake/ReleaseScript.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\tiff_VS2022\build_vs2022\CMakeFiles\tiff_release</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Releasing tiff 4.6.0 ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\CMake\bin\cmake.exe -DSOURCE_DIR:PATH=E:/tiff_VS2022 -DLIBTIFF_VERSION=4.6.0 -DLIBTIFF_BASIC_SOURCE_DIR=E:/tiff_VS2022 -DLIBTIFF_BASIC_BINARY_DIR=E:/tiff_VS2022/build_vs2022 -P E:/tiff_VS2022/cmake/ReleaseScript.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\tiff_VS2022\build_vs2022\CMakeFiles\tiff_release</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Releasing tiff 4.6.0 ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\CMake\bin\cmake.exe -DSOURCE_DIR:PATH=E:/tiff_VS2022 -DLIBTIFF_VERSION=4.6.0 -DLIBTIFF_BASIC_SOURCE_DIR=E:/tiff_VS2022 -DLIBTIFF_BASIC_BINARY_DIR=E:/tiff_VS2022/build_vs2022 -P E:/tiff_VS2022/cmake/ReleaseScript.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\tiff_VS2022\build_vs2022\CMakeFiles\tiff_release</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Releasing tiff 4.6.0 ...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\CMake\bin\cmake.exe -DSOURCE_DIR:PATH=E:/tiff_VS2022 -DLIBTIFF_VERSION=4.6.0 -DLIBTIFF_BASIC_SOURCE_DIR=E:/tiff_VS2022 -DLIBTIFF_BASIC_BINARY_DIR=E:/tiff_VS2022/build_vs2022 -P E:/tiff_VS2022/cmake/ReleaseScript.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\tiff_VS2022\build_vs2022\CMakeFiles\tiff_release</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</VerifyInputsAndOutputsExist>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\tiff_VS2022\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule E:/tiff_VS2022/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\CMake\bin\cmake.exe -SE:/tiff_VS2022 -BE:/tiff_VS2022/build_vs2022 --check-stamp-file E:/tiff_VS2022/build_vs2022/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\CMake\share\cmake-3.29\Modules\CMakeCInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeInitializeConfigs.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInitialize.cmake;D:\CMake\share\cmake-3.29\Modules\CheckCCompilerFlag.cmake;D:\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;D:\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;D:\CMake\share\cmake-3.29\Modules\CheckIncludeFileCXX.cmake;D:\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;D:\CMake\share\cmake-3.29\Modules\CheckSymbolExists.cmake;D:\CMake\share\cmake-3.29\Modules\CheckTypeSize.cmake;D:\CMake\share\cmake-3.29\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.29\Modules\Compiler\MSVC-C.cmake;D:\CMake\share\cmake-3.29\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.29\Modules\Compiler\MSVC.cmake;D:\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;D:\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;D:\CMake\share\cmake-3.29\Modules\FindZLIB.cmake;D:\CMake\share\cmake-3.29\Modules\GNUInstallDirs.cmake;D:\CMake\share\cmake-3.29\Modules\Internal\CheckCompilerFlag.cmake;D:\CMake\share\cmake-3.29\Modules\Internal\CheckFlagCommonConfig.cmake;D:\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows-Initialize.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-C.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\WindowsPaths.cmake;D:\CMake\share\cmake-3.29\Modules\SelectLibraryConfigurations.cmake;D:\CMake\share\cmake-3.29\Modules\TestBigEndian.cmake;E:\tiff_VS2022\build_vs2022\CMakeFiles\3.29.6\CMakeCCompiler.cmake;E:\tiff_VS2022\build_vs2022\CMakeFiles\3.29.6\CMakeCXXCompiler.cmake;E:\tiff_VS2022\build_vs2022\CMakeFiles\3.29.6\CMakeRCCompiler.cmake;E:\tiff_VS2022\build_vs2022\CMakeFiles\3.29.6\CMakeSystem.cmake;E:\tiff_VS2022\cmake\AutotoolsCompat.cmake;E:\tiff_VS2022\cmake\AutotoolsVersion.cmake;E:\tiff_VS2022\cmake\CXXLibrary.cmake;E:\tiff_VS2022\cmake\CompilerChecks.cmake;E:\tiff_VS2022\cmake\DeflateCodec.cmake;E:\tiff_VS2022\cmake\FindCMath.cmake;E:\tiff_VS2022\cmake\FindDeflate.cmake;E:\tiff_VS2022\cmake\FindJBIG.cmake;E:\tiff_VS2022\cmake\FindJPEG.cmake;E:\tiff_VS2022\cmake\FindLERC.cmake;E:\tiff_VS2022\cmake\FindWebP.cmake;E:\tiff_VS2022\cmake\FindZSTD.cmake;E:\tiff_VS2022\cmake\Findliblzma.cmake;E:\tiff_VS2022\cmake\IncludeChecks.cmake;E:\tiff_VS2022\cmake\InternalCodecs.cmake;E:\tiff_VS2022\cmake\JBIGCodec.cmake;E:\tiff_VS2022\cmake\JPEGCodec.cmake;E:\tiff_VS2022\cmake\LERCCodec.cmake;E:\tiff_VS2022\cmake\LZMACodec.cmake;E:\tiff_VS2022\cmake\LargeFileSupport.cmake;E:\tiff_VS2022\cmake\LibraryFeatures.cmake;E:\tiff_VS2022\cmake\LinkerChecks.cmake;E:\tiff_VS2022\cmake\PixarLogCodec.cmake;E:\tiff_VS2022\cmake\PkgConfig.cmake;E:\tiff_VS2022\cmake\ProcessorChecks.cmake;E:\tiff_VS2022\cmake\Release.cmake;E:\tiff_VS2022\cmake\SymbolChecks.cmake;E:\tiff_VS2022\cmake\TypeSizeChecks.cmake;E:\tiff_VS2022\cmake\WebPCodec.cmake;E:\tiff_VS2022\cmake\WindowsSupport.cmake;E:\tiff_VS2022\cmake\ZSTDCodec.cmake;E:\tiff_VS2022\configure.ac;E:\tiff_VS2022\libtiff-4.pc.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\tiff_VS2022\build_vs2022\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule E:/tiff_VS2022/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\CMake\bin\cmake.exe -SE:/tiff_VS2022 -BE:/tiff_VS2022/build_vs2022 --check-stamp-file E:/tiff_VS2022/build_vs2022/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\CMake\share\cmake-3.29\Modules\CMakeCInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeInitializeConfigs.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInitialize.cmake;D:\CMake\share\cmake-3.29\Modules\CheckCCompilerFlag.cmake;D:\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;D:\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;D:\CMake\share\cmake-3.29\Modules\CheckIncludeFileCXX.cmake;D:\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;D:\CMake\share\cmake-3.29\Modules\CheckSymbolExists.cmake;D:\CMake\share\cmake-3.29\Modules\CheckTypeSize.cmake;D:\CMake\share\cmake-3.29\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.29\Modules\Compiler\MSVC-C.cmake;D:\CMake\share\cmake-3.29\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.29\Modules\Compiler\MSVC.cmake;D:\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;D:\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;D:\CMake\share\cmake-3.29\Modules\FindZLIB.cmake;D:\CMake\share\cmake-3.29\Modules\GNUInstallDirs.cmake;D:\CMake\share\cmake-3.29\Modules\Internal\CheckCompilerFlag.cmake;D:\CMake\share\cmake-3.29\Modules\Internal\CheckFlagCommonConfig.cmake;D:\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows-Initialize.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-C.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\WindowsPaths.cmake;D:\CMake\share\cmake-3.29\Modules\SelectLibraryConfigurations.cmake;D:\CMake\share\cmake-3.29\Modules\TestBigEndian.cmake;E:\tiff_VS2022\build_vs2022\CMakeFiles\3.29.6\CMakeCCompiler.cmake;E:\tiff_VS2022\build_vs2022\CMakeFiles\3.29.6\CMakeCXXCompiler.cmake;E:\tiff_VS2022\build_vs2022\CMakeFiles\3.29.6\CMakeRCCompiler.cmake;E:\tiff_VS2022\build_vs2022\CMakeFiles\3.29.6\CMakeSystem.cmake;E:\tiff_VS2022\cmake\AutotoolsCompat.cmake;E:\tiff_VS2022\cmake\AutotoolsVersion.cmake;E:\tiff_VS2022\cmake\CXXLibrary.cmake;E:\tiff_VS2022\cmake\CompilerChecks.cmake;E:\tiff_VS2022\cmake\DeflateCodec.cmake;E:\tiff_VS2022\cmake\FindCMath.cmake;E:\tiff_VS2022\cmake\FindDeflate.cmake;E:\tiff_VS2022\cmake\FindJBIG.cmake;E:\tiff_VS2022\cmake\FindJPEG.cmake;E:\tiff_VS2022\cmake\FindLERC.cmake;E:\tiff_VS2022\cmake\FindWebP.cmake;E:\tiff_VS2022\cmake\FindZSTD.cmake;E:\tiff_VS2022\cmake\Findliblzma.cmake;E:\tiff_VS2022\cmake\IncludeChecks.cmake;E:\tiff_VS2022\cmake\InternalCodecs.cmake;E:\tiff_VS2022\cmake\JBIGCodec.cmake;E:\tiff_VS2022\cmake\JPEGCodec.cmake;E:\tiff_VS2022\cmake\LERCCodec.cmake;E:\tiff_VS2022\cmake\LZMACodec.cmake;E:\tiff_VS2022\cmake\LargeFileSupport.cmake;E:\tiff_VS2022\cmake\LibraryFeatures.cmake;E:\tiff_VS2022\cmake\LinkerChecks.cmake;E:\tiff_VS2022\cmake\PixarLogCodec.cmake;E:\tiff_VS2022\cmake\PkgConfig.cmake;E:\tiff_VS2022\cmake\ProcessorChecks.cmake;E:\tiff_VS2022\cmake\Release.cmake;E:\tiff_VS2022\cmake\SymbolChecks.cmake;E:\tiff_VS2022\cmake\TypeSizeChecks.cmake;E:\tiff_VS2022\cmake\WebPCodec.cmake;E:\tiff_VS2022\cmake\WindowsSupport.cmake;E:\tiff_VS2022\cmake\ZSTDCodec.cmake;E:\tiff_VS2022\configure.ac;E:\tiff_VS2022\libtiff-4.pc.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\tiff_VS2022\build_vs2022\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule E:/tiff_VS2022/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\CMake\bin\cmake.exe -SE:/tiff_VS2022 -BE:/tiff_VS2022/build_vs2022 --check-stamp-file E:/tiff_VS2022/build_vs2022/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\CMake\share\cmake-3.29\Modules\CMakeCInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeInitializeConfigs.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInitialize.cmake;D:\CMake\share\cmake-3.29\Modules\CheckCCompilerFlag.cmake;D:\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;D:\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;D:\CMake\share\cmake-3.29\Modules\CheckIncludeFileCXX.cmake;D:\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;D:\CMake\share\cmake-3.29\Modules\CheckSymbolExists.cmake;D:\CMake\share\cmake-3.29\Modules\CheckTypeSize.cmake;D:\CMake\share\cmake-3.29\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.29\Modules\Compiler\MSVC-C.cmake;D:\CMake\share\cmake-3.29\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.29\Modules\Compiler\MSVC.cmake;D:\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;D:\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;D:\CMake\share\cmake-3.29\Modules\FindZLIB.cmake;D:\CMake\share\cmake-3.29\Modules\GNUInstallDirs.cmake;D:\CMake\share\cmake-3.29\Modules\Internal\CheckCompilerFlag.cmake;D:\CMake\share\cmake-3.29\Modules\Internal\CheckFlagCommonConfig.cmake;D:\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows-Initialize.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-C.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\WindowsPaths.cmake;D:\CMake\share\cmake-3.29\Modules\SelectLibraryConfigurations.cmake;D:\CMake\share\cmake-3.29\Modules\TestBigEndian.cmake;E:\tiff_VS2022\build_vs2022\CMakeFiles\3.29.6\CMakeCCompiler.cmake;E:\tiff_VS2022\build_vs2022\CMakeFiles\3.29.6\CMakeCXXCompiler.cmake;E:\tiff_VS2022\build_vs2022\CMakeFiles\3.29.6\CMakeRCCompiler.cmake;E:\tiff_VS2022\build_vs2022\CMakeFiles\3.29.6\CMakeSystem.cmake;E:\tiff_VS2022\cmake\AutotoolsCompat.cmake;E:\tiff_VS2022\cmake\AutotoolsVersion.cmake;E:\tiff_VS2022\cmake\CXXLibrary.cmake;E:\tiff_VS2022\cmake\CompilerChecks.cmake;E:\tiff_VS2022\cmake\DeflateCodec.cmake;E:\tiff_VS2022\cmake\FindCMath.cmake;E:\tiff_VS2022\cmake\FindDeflate.cmake;E:\tiff_VS2022\cmake\FindJBIG.cmake;E:\tiff_VS2022\cmake\FindJPEG.cmake;E:\tiff_VS2022\cmake\FindLERC.cmake;E:\tiff_VS2022\cmake\FindWebP.cmake;E:\tiff_VS2022\cmake\FindZSTD.cmake;E:\tiff_VS2022\cmake\Findliblzma.cmake;E:\tiff_VS2022\cmake\IncludeChecks.cmake;E:\tiff_VS2022\cmake\InternalCodecs.cmake;E:\tiff_VS2022\cmake\JBIGCodec.cmake;E:\tiff_VS2022\cmake\JPEGCodec.cmake;E:\tiff_VS2022\cmake\LERCCodec.cmake;E:\tiff_VS2022\cmake\LZMACodec.cmake;E:\tiff_VS2022\cmake\LargeFileSupport.cmake;E:\tiff_VS2022\cmake\LibraryFeatures.cmake;E:\tiff_VS2022\cmake\LinkerChecks.cmake;E:\tiff_VS2022\cmake\PixarLogCodec.cmake;E:\tiff_VS2022\cmake\PkgConfig.cmake;E:\tiff_VS2022\cmake\ProcessorChecks.cmake;E:\tiff_VS2022\cmake\Release.cmake;E:\tiff_VS2022\cmake\SymbolChecks.cmake;E:\tiff_VS2022\cmake\TypeSizeChecks.cmake;E:\tiff_VS2022\cmake\WebPCodec.cmake;E:\tiff_VS2022\cmake\WindowsSupport.cmake;E:\tiff_VS2022\cmake\ZSTDCodec.cmake;E:\tiff_VS2022\configure.ac;E:\tiff_VS2022\libtiff-4.pc.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\tiff_VS2022\build_vs2022\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule E:/tiff_VS2022/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\CMake\bin\cmake.exe -SE:/tiff_VS2022 -BE:/tiff_VS2022/build_vs2022 --check-stamp-file E:/tiff_VS2022/build_vs2022/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\CMake\share\cmake-3.29\Modules\CMakeCInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeInitializeConfigs.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInitialize.cmake;D:\CMake\share\cmake-3.29\Modules\CheckCCompilerFlag.cmake;D:\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;D:\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;D:\CMake\share\cmake-3.29\Modules\CheckIncludeFileCXX.cmake;D:\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;D:\CMake\share\cmake-3.29\Modules\CheckSymbolExists.cmake;D:\CMake\share\cmake-3.29\Modules\CheckTypeSize.cmake;D:\CMake\share\cmake-3.29\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.29\Modules\Compiler\MSVC-C.cmake;D:\CMake\share\cmake-3.29\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.29\Modules\Compiler\MSVC.cmake;D:\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;D:\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;D:\CMake\share\cmake-3.29\Modules\FindZLIB.cmake;D:\CMake\share\cmake-3.29\Modules\GNUInstallDirs.cmake;D:\CMake\share\cmake-3.29\Modules\Internal\CheckCompilerFlag.cmake;D:\CMake\share\cmake-3.29\Modules\Internal\CheckFlagCommonConfig.cmake;D:\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows-Initialize.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-C.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.29\Modules\Platform\WindowsPaths.cmake;D:\CMake\share\cmake-3.29\Modules\SelectLibraryConfigurations.cmake;D:\CMake\share\cmake-3.29\Modules\TestBigEndian.cmake;E:\tiff_VS2022\build_vs2022\CMakeFiles\3.29.6\CMakeCCompiler.cmake;E:\tiff_VS2022\build_vs2022\CMakeFiles\3.29.6\CMakeCXXCompiler.cmake;E:\tiff_VS2022\build_vs2022\CMakeFiles\3.29.6\CMakeRCCompiler.cmake;E:\tiff_VS2022\build_vs2022\CMakeFiles\3.29.6\CMakeSystem.cmake;E:\tiff_VS2022\cmake\AutotoolsCompat.cmake;E:\tiff_VS2022\cmake\AutotoolsVersion.cmake;E:\tiff_VS2022\cmake\CXXLibrary.cmake;E:\tiff_VS2022\cmake\CompilerChecks.cmake;E:\tiff_VS2022\cmake\DeflateCodec.cmake;E:\tiff_VS2022\cmake\FindCMath.cmake;E:\tiff_VS2022\cmake\FindDeflate.cmake;E:\tiff_VS2022\cmake\FindJBIG.cmake;E:\tiff_VS2022\cmake\FindJPEG.cmake;E:\tiff_VS2022\cmake\FindLERC.cmake;E:\tiff_VS2022\cmake\FindWebP.cmake;E:\tiff_VS2022\cmake\FindZSTD.cmake;E:\tiff_VS2022\cmake\Findliblzma.cmake;E:\tiff_VS2022\cmake\IncludeChecks.cmake;E:\tiff_VS2022\cmake\InternalCodecs.cmake;E:\tiff_VS2022\cmake\JBIGCodec.cmake;E:\tiff_VS2022\cmake\JPEGCodec.cmake;E:\tiff_VS2022\cmake\LERCCodec.cmake;E:\tiff_VS2022\cmake\LZMACodec.cmake;E:\tiff_VS2022\cmake\LargeFileSupport.cmake;E:\tiff_VS2022\cmake\LibraryFeatures.cmake;E:\tiff_VS2022\cmake\LinkerChecks.cmake;E:\tiff_VS2022\cmake\PixarLogCodec.cmake;E:\tiff_VS2022\cmake\PkgConfig.cmake;E:\tiff_VS2022\cmake\ProcessorChecks.cmake;E:\tiff_VS2022\cmake\Release.cmake;E:\tiff_VS2022\cmake\SymbolChecks.cmake;E:\tiff_VS2022\cmake\TypeSizeChecks.cmake;E:\tiff_VS2022\cmake\WebPCodec.cmake;E:\tiff_VS2022\cmake\WindowsSupport.cmake;E:\tiff_VS2022\cmake\ZSTDCodec.cmake;E:\tiff_VS2022\configure.ac;E:\tiff_VS2022\libtiff-4.pc.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\tiff_VS2022\build_vs2022\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="E:\tiff_VS2022\build_vs2022\CMakeFiles\tiff_release">
    </None>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="E:\tiff_VS2022\build_vs2022\ZERO_CHECK.vcxproj">
      <Project>{438E3118-FBD1-336A-A81A-3F5FBD729CED}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>